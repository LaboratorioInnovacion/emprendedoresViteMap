generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Genero {
  Masculino
  Femenino
  PrefieroNoDecir
}

enum NivelEstudios {
  SinEscolarizar
  PrimarioIncompleto
  PrimarioCompleto
  SecundarioIncompleto
  SecundarioCompleto
  TerciarioUniversitarioIncompleto
  TerciarioUniversitarioCompleto
  Posgrado
}

enum MotivacionEmprender {
  Pasion
  Independencia
  Oportunidad
  NecesidadEconomica
  Otro
}

enum EtapaEmprendimiento {
  Idea
  EnMarcha
  Consolidado
}

enum TipoEmprendimiento {
  Individual
  Asociativo
  Familiar
  Cooperativo
}

enum PlaneaIncorporar {
  Si
  No
  NoLoSabe
}

enum PercepcionPlanta {
  Adecuada
  Mayor
  Menor
  NoLoSabe
}

enum TipoBeneficiario {
  Emprendedor
  Emprendimiento
}

enum EstadoAsignacion {
  Otorgada
  Pendiente
  Rechazada
}

enum Sector {
  ProduccionElaboracion
  Comercio
  Servicios
}

enum ActividadSectorial {
  // Producción / Elaboración
  Produccion_Alimentos_Artesanal
  Produccion_Alimentos_Industrial
  Produccion_Articulos_Hogar
  Produccion_Indumentaria
  Produccion_Quimicos_Hogar
  Produccion_Belleza
  Produccion_Grafica
  Produccion_Vivero
  Produccion_Otro
  // Comercio
  Comercio_Indumentaria
  Comercio_Alimentos
  Comercio_Articulos_Hogar
  Comercio_Libreria
  Comercio_Informatica
  Comercio_Belleza
  Comercio_Mascotas
  Comercio_Regional
  Comercio_Construccion
  Comercio_Vivero
  Comercio_Otro
  // Servicios
  Servicio_Profesionales
  Servicio_Salud
  Servicio_Educativos
  Servicio_Turisticos
  Servicio_Reparacion_Electro
  Servicio_Reparacion_Vehiculos
  Servicio_Construccion
  Servicio_Gastronomicos
  Servicio_Otro
}

model Emprendedor {
  id                          Int                 @id @default(autoincrement())
  nombre                      String
  apellido                    String
  genero                      Genero?
  dni                         String              @unique
  cuil                        String              @unique
  fotoDni                     String?
  fechaNacimiento             DateTime
  paisOrigen                  String?
  ciudadOrigen                String?
  departamento                String?
  direccion                   String?
  ubicacion                   Bytes?
  nivelEstudios               NivelEstudios?
  motivacionEmprender         MotivacionEmprender?
  cantidadEmprendimientos     Int?
  poseeOtrosSustentos         Boolean?
  tiposSustento               String[]
  tieneDependientesEconomicos Boolean?
  telefono                    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  usuario Usuario? @relation("UsuarioEmprendedor")
  emprendimientos Emprendimiento[]
  asignaciones    Asignacion[]
}

model Emprendimiento {
  id                           Int                 @id @default(autoincrement())
  emprendedorId                Int
  emprendedor                  Emprendedor         @relation(fields: [emprendedorId], references: [id])
  etapa                        EtapaEmprendimiento
  denominacion                 String?
  fechaInicio                  DateTime?
  inscripcionArca              Boolean
  cuit                         String?
  sector                       Sector
  actividadPrincipal           ActividadSectorial
  tipoEmprendimiento           TipoEmprendimiento
  direccion                    String?
  ubicacion                    Bytes?
  telefono                     String?
  email                        String?
  web                          String?
  redSocial1                   String?
  redSocial2                   String?
  tienePersonal                Boolean
  cantidadPersonal             Int?
  modoIncorporacionPersonal    String[]
  planeaIncorporarPersonal     PlaneaIncorporar?
  percepcionPlantaPersonal     PercepcionPlanta?
  requiereCapacitacion         Boolean?
  tiposCapacitacion            String[]
  otrosTiposCapacitacion       String?
  requiereConsultoria          Boolean?
  tiposConsultoria             String[]
  otrosTiposConsultoria        String?
  requiereHerramientasTecno    Boolean?
  tiposHerramientasTecno       String[]
  otrasHerramientasTecno       String?
  usaRedesSociales             Boolean?
  tiposRedesSociales           String[]
  usaMediosPagoElectronicos    Boolean?
  canalesComercializacion      String[]
  otrosCanalesComercializacion String?
  poseeSucursales              Boolean?
  cantidadSucursales           Int?
  ubicacionSucursales          String[]
  planeaAbrirSucursal          Boolean?
  createdAt                    DateTime?            @default(now())
  updatedAt                    DateTime?            @updatedAt
  asignaciones                 Asignacion[]
}

model Herramienta {
  id                            Int              @id @default(autoincrement())
  nombre                        String
  origenTipo                    String[]
  origenOrganismo               String
  tipoBeneficiario              TipoBeneficiario
  tipoHerramientaEmprendimiento String[]
  tipoHerramientaEmprendedor    String[]
  montoTotal                    Float?
  montoPorBeneficiario          Float?
  poseeVencimiento              Boolean          @default(false)
  fechaInicioVigencia           DateTime?
  fechaFinVigencia              DateTime?
  cupo                          Int
  observaciones                 String?
  createdAt                     DateTime         @default(now())
  updatedAt                     DateTime         @updatedAt
  asignaciones                  Asignacion[]
}

model Asignacion {
  id               Int               @id @default(autoincrement())
  herramientaId    Int
  herramienta      Herramienta       @relation(fields: [herramientaId], references: [id])
  beneficiarioTipo TipoBeneficiario
  emprendedorId    Int?
  emprendedor      Emprendedor?      @relation(fields: [emprendedorId], references: [id])
  emprendimientoId Int?
  emprendimiento   Emprendimiento?   @relation(fields: [emprendimientoId], references: [id])
  fechaAsignacion  DateTime
  estado           EstadoAsignacion?
  observaciones    String?
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
}

enum Rol {
  SUPERUSUARIO
  ADMIN
  EMPRENDEDOR
}

model Usuario {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  rol       Rol      @default(EMPRENDEDOR)
  activo    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  emprendedorId Int?         @unique
  emprendedor   Emprendedor? @relation("UsuarioEmprendedor", fields: [emprendedorId], references: [id])
}
